@model WasteManagement.Models.tbl_user

@{
    ViewBag.Title = "Register";
}

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()

    <div class="card col-md-4 mb-5">
        <div class="card-header">
            <h5><i class="bi-people-fill"></i>Registration</h5>
        </div>
        <div class="card-body">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="row g-2 mb-2">
                <div class="col-md-12">
                    @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "" })
                    @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter username" } })
                    @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
                </div>

                <div class="col-md-12">
                    @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "" })
                    @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", type = "password", placeholder = "Enter password" } })
                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                </div>

                <div class="col-md-12">
                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "" })
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter Email" } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>

                <div class="col-md-12">
                    @Html.LabelFor(model => model.Fname, htmlAttributes: new { @class = "" })
                    @Html.EditorFor(model => model.Fname, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter First name" } })
                    @Html.ValidationMessageFor(model => model.Fname, "", new { @class = "text-danger" })
                </div>

                <div class="col-md-12">
                    @Html.LabelFor(model => model.Mn, htmlAttributes: new { @class = "" })
                    @Html.EditorFor(model => model.Mn, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter Middle name" } })
                    @Html.ValidationMessageFor(model => model.Mn, "", new { @class = "text-danger" })
                </div>

                <div class="col-md-12">
                    @Html.LabelFor(model => model.Lname, htmlAttributes: new { @class = "" })
                    @Html.EditorFor(model => model.Lname, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter Last name" } })
                    @Html.ValidationMessageFor(model => model.Lname, "", new { @class = "text-danger" })
                </div>

                <div class="col-md-12">
                    @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "" })
                    @Html.DropDownListFor(model => model.Gender, new List<SelectListItem> { new SelectListItem { Text = "Male", Value = "Male"  }, new SelectListItem { Text = "Female", Value = "Female" } }, "Gender", new { @class = "form-select"} )
                    @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                </div>

                <div class="col-md-12">
                    @Html.LabelFor(model => model.Bday, htmlAttributes: new { @class = "" })
                    @Html.EditorFor(model => model.Bday, new { htmlAttributes = new { @class = "form-control", type = "date" } })
                    @Html.ValidationMessageFor(model => model.Bday, "", new { @class = "text-danger" })
                </div>
                <div class="col">
                    <input type="submit" value="Submit" class="btn btn-success" />
                </div>
            </div>
            <div>
                @Html.ActionLink("Back to Login", "Login")
            </div>
        </div>
    </div>
}



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
